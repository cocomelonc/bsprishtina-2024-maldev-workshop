import socket, struct, time

MCAST_GRP = 'ff02::fb'
PORT = 5353
IFACE = 'wlan0'
MY_HOST = 'faketv.local'
SERVICE = '_airplay._tcp.local'
INSTANCE = 'LivingRoom._airplay._tcp.local'

def encode(name):
    return b''.join([bytes([len(p)]) + p.encode() for p in name.split('.')]) + b'\x00'

def pkt():
    p = b'\x00\x00\x84\x00\x00\x00\x00\x04\x00\x00\x00\x00'
    ptr = encode(SERVICE) + b'\x00\x0c\x00\x01\x00\x00\x11\x94'
    ptr_data = encode(INSTANCE)
    p += struct.pack('!H', len(ptr_data)) + ptr_data

    srv = encode(INSTANCE) + b'\x00\x21\x00\x01\x00\x00\x00\x78'
    srv_data = struct.pack('!HHH', 0, 0, 7000) + encode(MY_HOST)
    p += struct.pack('!H', len(srv_data)) + srv_data

    txt = encode(INSTANCE) + b'\x00\x10\x00\x01\x00\x00\x00\x78'
    txt_data = (
        b'\x0fdeviceid=11:22:33:44:55:66'
        b'\x13features=0x5A7FFFF7'
        b'\x10model=AppleTV5,3'
        b'\x10srcvers=220.68'
    )
    p += struct.pack('!H', len(txt_data)) + txt_data

    aaaa = encode(MY_HOST) + b'\x00\x1c\x00\x01\x00\x00\x00\x78'
    ip6 = socket.inet_pton(socket.AF_INET6, MY_IP.split('%')[0])
    p += struct.pack('!H', 16) + ip6

    return p

# socket
s = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)
s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_MULTICAST_HOPS, 255)
s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_MULTICAST_LOOP, 1)

# iface index
idx = socket.if_nametoindex(IFACE)
MY_IP = 'fe80::a922:22d1:c1ee:261a%wlan0'  # replace %wlan0 if needed

print("[*] sending IPv6 AirPlay fake deviceâ€¦")
while True:
    s.sendto(pkt(), (MCAST_GRP, PORT, 0, idx))
    time.sleep(2)
